name: template_update

on:
 workflow_call:
    inputs:
      template_repo:
        description: 'URL of the cookiecutter template repo'
        required: true
        type: string
      repo_branch:
        description: 'Branch of the project repo to update'
        required: true
        type: string

jobs:
  template-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.repo_branch }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install cookiecutter jq

      - name: Read old template SHA
        id: get_old_sha
        run: |
          OLD_SHA=$(jq -r '.cookiecutter.template_sha // empty' .cookiecutter.json)
          if [ -z "$OLD_SHA" ]; then
            echo "::error ::.cookiecutter.json is missing 'cookiecutter.template_sha'"
            exit 1
          fi
          echo "old_sha=$OLD_SHA" >> $GITHUB_OUTPUT

      - name: Fetch new template SHA
        id: get_new_sha
        run: |
          NEW_SHA=$(git ls-remote "${{ inputs.template_repo }}" HEAD | cut -f1)
          echo "new_sha=$NEW_SHA" >> $GITHUB_OUTPUT

      - name: Clone base template at old SHA
        run: |
          git clone "${{ inputs.template_repo }}" base-template
          pushd base-template
            git checkout "${{ steps.get_old_sha.outputs.old_sha }}"
          popd

      - name: Verify .git exists in base-template
        run: |
          if [ ! -d base-template/.git ]; then
            echo "::error ::base-template is missing .git directory!"
            exit 1
          fi
          
      - name: Clone new template at HEAD
        run: git clone "${{ inputs.template_repo }}" template-source

      - name: Determine sub-template path
        id: template_path
        run: |
          if grep -q '"is_aspire": *"yes"' .cookiecutter.json; then
            echo "path=aspire-project" >> $GITHUB_OUTPUT
          elif grep -q '"is_docker": *"yes"' .cookiecutter.json; then
            echo "path=docker-project" >> $GITHUB_OUTPUT
          else
            echo "::error ::No valid sub-template selected!" && exit 1
          fi

      - name: Generate base template output
        run: |
          mkdir -p template-base
          cookiecutter "${{ inputs.template_repo }}" \
            --checkout HEAD \
            --directory "${{ steps.template_path.outputs.path }}" \
            --replay-file .cookiecutter.json \
            --output-dir template-base

      - name: Generate new template output
        run: |
          mkdir -p template-new
          cookiecutter "${{ inputs.template_repo }}" \
            --checkout HEAD \
            --directory "${{ steps.template_path.outputs.path }}" \
            --replay-file .cookiecutter.json \
            --no-input \
            --overwrite-if-exists \
            --output-dir template-new

      - name: Create update.patch
        run: |
          diff -ruN \
            template-base/${{ steps.template_path.outputs.path }} \
            template-new/${{ steps.template_path.outputs.path }} \
            > update.patch || true

      - name: Apply three-way merge
        run: |
          if ! git apply --index --3way update.patch; then
            echo "::error ::Merge conflicts detected in template updates – exiting."
            exit 1
          fi

      - name: Write new SHA to .cookiecutter.json
        run: |
          jq --arg sha "${{ steps.get_new_sha.outputs.new_sha }}" \
             '.cookiecutter.template_sha = $sha' .cookiecutter.json > tmp.json
          mv tmp.json .cookiecutter.json
          git add .cookiecutter.json

      - name: Cleanup
        run: rm -rf base-template template-source template-base template-new update.patch

      - name: Commit & push
        id: commit
        run: |
          BRANCH="template-update-${{ steps.get_new_sha.outputs.new_sha }}"
          echo "UPDATE_BRANCH=$BRANCH" >> $GITHUB_ENV
          git checkout -b "$BRANCH"
          git commit -m "chore: merge template updates ${{ steps.get_old_sha.outputs.old_sha }} → ${{ steps.get_new_sha.outputs.new_sha }}"
          git push origin "$BRANCH"

      - name: Create draft Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.UPDATE_BRANCH }}
          base:   ${{ inputs.repo_branch }}
          draft:  true
          title:  "chore: merge cookiecutter template updates"
          body: |
            **Template Repo:** ${{ inputs.template_repo }}
            **Base SHA:**      ${{ steps.get_old_sha.outputs.old_sha }}
            **New  SHA:**      ${{ steps.get_new_sha.outputs.new_sha }}
